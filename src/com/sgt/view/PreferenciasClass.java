/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sgt.view;

import com.sgt.model.Model;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import static java.lang.System.out;
import java.nio.channels.FileChannel;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.hadoop.fs.BufferedFSInputStream;

/**
 *
 * @author maste
 */
public class PreferenciasClass extends javax.swing.JInternalFrame {

    /**
     * Creates new form PreferenciasClass
     */
    public PreferenciasClass() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnBkp = new javax.swing.JButton();
        btnDefaultRestore = new javax.swing.JButton();
        btnRestore = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Preferências do Usuário");
        setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Preferências:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Gerência de Dados:");

        btnBkp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sgt/img/1485912169_vector_66_12.png"))); // NOI18N
        btnBkp.setText("Backup");
        btnBkp.setToolTipText("");
        btnBkp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBkpActionPerformed(evt);
            }
        });

        btnDefaultRestore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sgt/img/1485912315_free-27.png"))); // NOI18N
        btnDefaultRestore.setText("Apagar ");
        btnDefaultRestore.setToolTipText("");
        btnDefaultRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultRestoreActionPerformed(evt);
            }
        });

        btnRestore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sgt/img/1485912248_backup-restore.png"))); // NOI18N
        btnRestore.setText("Restaurar");
        btnRestore.setToolTipText("");
        btnRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestoreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(btnBkp, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnDefaultRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addGap(59, 59, 59)
                .addComponent(jLabel4)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBkp, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDefaultRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRestore, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(271, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBkpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBkpActionPerformed
        try {
            Copydb();
        } catch (IOException ex) {
            Logger.getLogger(PreferenciasClass.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBkpActionPerformed

    private void btnDefaultRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefaultRestoreActionPerformed
       
         int decisao = JOptionPane.showConfirmDialog(this, "ATENÇÂO!!! Todos os dados do Sistema serão perdidos!! Tem certeza que deseja apagar tudo?", "Alerta", JOptionPane.YES_NO_OPTION);
        
         if(decisao == 0){
             
             Model CallModel = new Model();
             Boolean Exe = CallModel.DeleteAll();
             
             if(Exe == true){
                 JOptionPane.showMessageDialog(this, "Dados Apagados com sucesso! Favor iniciar o programa novamente.");
                 System.exit(0);
             }else{
                 JOptionPane.showMessageDialog(this, "Houve um erro ao executar a ação!!");
             }
         }
        
        
        
    }//GEN-LAST:event_btnDefaultRestoreActionPerformed

    private void btnRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestoreActionPerformed

        JFileChooser open = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos_Dados", "db");
        open.setDialogTitle("Selecione o arquivo com os dados do sistema");
        open.setFileFilter(filter);
        int retorno = open.showOpenDialog(null);

        if (retorno == 0) {
            int decisao = JOptionPane.showConfirmDialog(this, "ATENÇÂO!!! Essa ação não pode ser desfeita podendo ocasionar em perda de dados. Tem certeza que deseja restaurar o arquivo de backup?", "Alerta", JOptionPane.YES_NO_OPTION);

            if (decisao == 0) {
                try {
                    FileChannel ori = new FileInputStream(open.getSelectedFile().getAbsolutePath()).getChannel();
                    FileChannel dest = new FileOutputStream("C:\\SGT\\db\\emt.db").getChannel();
                    dest.transferFrom(ori, 0, ori.size());

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(PreferenciasClass.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(PreferenciasClass.class.getName()).log(Level.SEVERE, null, ex);
                }

                JOptionPane.showMessageDialog(this, "Dados restaurados com sucesso. Favor iniciar o programa novamente.");
                System.exit(0);
            }
        }


    }//GEN-LAST:event_btnRestoreActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBkp;
    private javax.swing.JButton btnDefaultRestore;
    private javax.swing.JButton btnRestore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    private void Copydb() throws FileNotFoundException, IOException {

        File Folder = new File(System.getProperty("user.home") + "\\Desktop\\BKPSGT");
        SimpleDateFormat FormatBr = new SimpleDateFormat("dd-MM-yyyy");
        if (!Folder.isDirectory()) {
            Folder.mkdir();
        }

        try {

            FileInputStream FileEnt = new FileInputStream("C:\\SGT\\db\\emt.db");
            ZipOutputStream ZipFile = new ZipOutputStream(new FileOutputStream(System.getProperty("user.home") + "\\Desktop\\BKPSGT\\BKP_" + FormatBr.format(new java.util.Date()) + ".zip"));
            ZipFile.putNextEntry(new ZipEntry("emt.db"));
            byte[] buffer = new byte[1024];
            int StreamByte;
            while ((StreamByte = FileEnt.read(buffer)) > 0) {
                ZipFile.write(buffer, 0, StreamByte);
            }

            ZipFile.closeEntry();
            ZipFile.close();
            FileEnt.close();

            JOptionPane.showMessageDialog(null, "Backup Feito com sucesso! Verifique sua area de trabalho.");

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Falha ao realizar o Backup. log de erro: " + e.getMessage());
        }

    }
}
